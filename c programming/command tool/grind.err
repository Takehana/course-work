==16157== Memcheck, a memory error detector
==16157== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==16157== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==16157== Command: ./yshell
==16157== 
yshell: Bad: no such function
==16157== 
==16157== HEAP SUMMARY:
==16157==     in use at exit: 1,368 bytes in 34 blocks
==16157==   total heap usage: 238 allocs, 204 frees, 8,261 bytes allocated
==16157== 
==16157== 1,368 (64 direct, 1,304 indirect) bytes in 1 blocks are definitely lost in loss record 12 of 12
==16157==    at 0x4C2A1A3: operator new(unsigned long) (vg_replace_malloc.c:334)
==16157==    by 0x411C7F: __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<inode, std::allocator<inode>, (__gnu_cxx::_Lock_policy)2> >::allocate(unsigned long, void const*) (new_allocator.h:104)
==16157==    by 0x411728: std::allocator_traits<std::allocator<std::_Sp_counted_ptr_inplace<inode, std::allocator<inode>, (__gnu_cxx::_Lock_policy)2> > >::allocate(std::allocator<std::_Sp_counted_ptr_inplace<inode, std::allocator<inode>, (__gnu_cxx::_Lock_policy)2> >&, unsigned long) (alloc_traits.h:436)
==16157==    by 0x410D35: std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<inode, std::allocator<inode>, (__gnu_cxx::_Lock_policy)2> > > std::__allocate_guarded<std::allocator<std::_Sp_counted_ptr_inplace<inode, std::allocator<inode>, (__gnu_cxx::_Lock_policy)2> > >(std::allocator<std::_Sp_counted_ptr_inplace<inode, std::allocator<inode>, (__gnu_cxx::_Lock_policy)2> >&) (allocated_ptr.h:103)
==16157==    by 0x410291: std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<inode, std::allocator<inode>, file_type>(std::_Sp_make_shared_tag, inode*, std::allocator<inode> const&, file_type&&) (shared_ptr_base.h:613)
==16157==    by 0x40F563: std::__shared_ptr<inode, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<inode>, file_type>(std::_Sp_make_shared_tag, std::allocator<inode> const&, file_type&&) (shared_ptr_base.h:1100)
==16157==    by 0x40E323: std::shared_ptr<inode>::shared_ptr<std::allocator<inode>, file_type>(std::_Sp_make_shared_tag, std::allocator<inode> const&, file_type&&) (shared_ptr.h:319)
==16157==    by 0x40D3C2: std::shared_ptr<inode> std::allocate_shared<inode, std::allocator<inode>, file_type>(std::allocator<inode> const&, file_type&&) (shared_ptr.h:620)
==16157==    by 0x40C8E6: std::shared_ptr<inode> std::make_shared<inode, file_type>(file_type&&) (shared_ptr.h:636)
==16157==    by 0x40ABC1: inode_state::inode_state() (file_sys.cpp:34)
==16157==    by 0x4130EE: main (main.cpp:50)
==16157== 
==16157== LEAK SUMMARY:
==16157==    definitely lost: 64 bytes in 1 blocks
==16157==    indirectly lost: 1,304 bytes in 33 blocks
==16157==      possibly lost: 0 bytes in 0 blocks
==16157==    still reachable: 0 bytes in 0 blocks
==16157==         suppressed: 0 bytes in 0 blocks
==16157== 
==16157== For counts of detected and suppressed errors, rerun with: -v
==16157== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
